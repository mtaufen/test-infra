- job-template:
    name: 'kubernetes-e2e-{suffix}'
    node: '{jenkins_node}'
    triggers:
        - reverse:
            jobs: '{trigger-job}'
            result: success
        - timed: '{cron-string}'
    description: '{description} Test owner: {test-owner}.'
    jenkins_node: 'e2e'
    disabled: '{obj:disable_job}'
    properties:
        - build-discarder:
            days-to-keep: 7
    # Need the 8 essential kube-system pods ready before declaring cluster ready
    # etcd-server, kube-apiserver, kube-controller-manager, kube-dns
    # kube-scheduler, l7-default-backend, l7-lb-controller, kube-addon-manager
    provider-env: |
        export KUBERNETES_PROVIDER="gce"
        export E2E_MIN_STARTUP_PODS="8"
        export KUBE_GCE_ZONE="us-central1-f"
        export FAIL_ON_GCP_RESOURCE_LEAK="true"
        export CLOUDSDK_CORE_PRINT_UNHANDLED_TRACEBACKS="1"
    builders:
        - activate-gce-service-account
        - shell: |
            {provider-env}
            {job-env}
            {post-env}
            timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
            {report-rc}
    wrappers:
        - ansicolor:
            colormap: xterm
        - e2e-credentials-binding
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - timestamps
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'
    publishers:
        - claim-build
        - junit-publisher
        - log-parser
        - email-ext:
            recipients: '{emails}'
        - gcs-uploader

- project:
    name: kubernetes-e2e-gce-master
    trigger-job: 'kubernetes-build'
    test-owner: 'Build Cop'
    suffix:
        - 'gce':  # kubernetes-e2e-gce
            cron-string: '{sq-cron-string}'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel.'
            timeout: 50  # See #21138
            job-env: |
                # This is the *only* job that should publish the last green version.
                export E2E_PUBLISH_GREEN_VERSION="true"
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                export PROJECT="k8s-jkns-e2e-gce"
                export NUM_NODES="4"
                export GINKGO_PARALLEL_NODES="30"
        - 'gce-gci':  # kubernetes-e2e-gce-gci
            cron-string: '{sq-cron-string}'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE with GCI in parallel.'
            timeout: 50  # See #21138
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export KUBE_OS_DISTRIBUTION="gci"
                export PROJECT="k8s-jkns-e2e-gce-gci"
        - 'gce-slow':  # kubernetes-e2e-gce-slow
            cron-string: '{sq-cron-string}'
            description: 'Runs slow tests on GCE, sequentially.'
            timeout: 150  #  See #24072
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export KUBE_GCE_ZONE="europe-west1-c"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                export PROJECT="k8s-jkns-e2e-gce-slow"
        - 'gce-gci-slow':  # kubernetes-e2e-gce-gci-slow
            cron-string: '{sq-cron-string}'
            description: 'Runs slow tests on GCE, sequentially.'
            timeout: 150  #  See #24072
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export KUBE_GCE_ZONE="europe-west1-c"
                export KUBE_OS_DISTRIBUTION="gci"
                export PROJECT="k8s-jkns-e2e-gce-gci-slow"
        - 'gce-serial':  # kubernetes-e2e-gce-serial
            description: 'Run [Serial], [Disruptive], tests on GCE.'
            timeout: 300
            job-env: |
                export ENABLE_GARBAGE_COLLECTOR="true"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="kubernetes-jkns-e2e-gce-serial"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-gci-serial':  # kubernetes-e2e-gce-gci-serial
            description: 'Run [Serial], [Disruptive], tests on GCE.'
            timeout: 300
            job-env: |
                export ENABLE_GARBAGE_COLLECTOR="true"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="k8s-jkns-e2e-gce-gci-serial"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-reboot':  # kubernetes-e2e-gce-reboot
            description: 'Run [Feature:Reboot] tests on GCE.'
            timeout: 180
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                export PROJECT="k8s-jkns-e2e-gce-ci-reboot"
        - 'gce-autoscaling':  # kubernetes-e2e-gce-autoscaling
            description: 'Run autoscaling E2E tests on GCE.'
            timeout: 210
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\]|\[Feature:InitialResources\] \
                                         --ginkgo.skip=\[Flaky\]"
                export PROJECT="k8s-jnks-e2e-gce-autoscaling"
                # Override GCE default for cluster size autoscaling purposes.
                export ENABLE_CUSTOM_METRICS="true"
                export KUBE_ENABLE_CLUSTER_AUTOSCALER="true"
                export NUM_NODES=3
                export KUBE_AUTOSCALER_MIN_NODES=3
                export KUBE_AUTOSCALER_MAX_NODES=5
                export KUBE_AUTOSCALER_ENABLE_SCALE_DOWN=true
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                export KUBE_ADMISSION_CONTROL="NamespaceLifecycle,InitialResources,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        - 'gce-autoscaling-migs':  # kubernetes-e2e-gce-autoscaling-migs
            description: 'Run autoscaling E2E tests on GCE with multiple MIGs.'
            timeout: 210
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\] --ginkgo.skip=\[Flaky\]"
                export PROJECT="k8s-jnks-e2e-gce-autoscl-migs"
                # Override GCE default for cluster size autoscaling purposes.
                export KUBE_ENABLE_CLUSTER_AUTOSCALER="true"
                export NUM_NODES=3
                export MAX_INSTANCES_PER_MIG=2
                export KUBE_AUTOSCALER_MIN_NODES=3
                export KUBE_AUTOSCALER_MAX_NODES=5
                export KUBE_AUTOSCALER_ENABLE_SCALE_DOWN=true
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                export KUBE_ADMISSION_CONTROL="NamespaceLifecycle,InitialResources,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        - 'gce-alpha-features': # kubernetes-e2e-gce-alpha-features
            description: 'Run alpha feature E2E tests on GCE.'
            timeout: 180
            job-env: |
              export PROJECT="k8s-jkns-e2e-gce-alpha"
              export KUBE_FEATURE_GATES="AllAlpha=true"
              export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:(ExternalTrafficLocalOnly|PetSet)\]|ScheduledJob"
              export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-flaky':  # kubernetes-e2e-gce-flaky
            description: 'Run the flaky tests on GCE, sequentially.'
            timeout: 180
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Flaky\] \
                                         --ginkgo.skip=\[Feature:.+\]"
                export PROJECT="k8s-jkns-e2e-gce-flaky"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-scalability':  # kubernetes-e2e-gce-scalability
            description: 'Run the performance/scalability tests on GCE. A larger cluster is used.'
            timeout: 120
            cron-string: 'H H/12 * * *'
            job-env: |
                export E2E_NAME="e2e-scalability"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                         --kube-api-content-type=application/vnd.kubernetes.protobuf \
                                         --allowed-not-ready-nodes=1 \
                                         --gather-resource-usage=true \
                                         --gather-metrics-at-teardown=true \
                                         --gather-logs-sizes=true \
                                         --output-print-type=json"
                # Create a project k8s-jenkins-scalability-head and move this test there
                export PROJECT="google.com:k8s-jenkins-scalability"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override GCE defaults.
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-2"
                export NODE_DISK_SIZE="50GB"
                export NUM_NODES="100"
                export ALLOWED_NOTREADY_NODES="1"
                export REGISTER_MASTER="true"
                # Reduce logs verbosity
                export TEST_CLUSTER_LOG_LEVEL="--v=2"
                # Increase resync period to simulate production
                export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
                # Increase delete collection parallelism
                export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-gci-scalability':  # kubernetes-e2e-gce-gci-scalability
            description: 'Run the performance/scalability tests on GCE. A larger cluster is used.'
            timeout: 120
            cron-string: 'H H/12 * * *'
            job-env: |
                export E2E_NAME="e2e-scalability"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                         --gather-resource-usage=true \
                                         --gather-metrics-at-teardown=true \
                                         --gather-logs-sizes=true \
                                         --output-print-type=json"
                # Create a project k8s-jenkins-scalability-head and move this test there
                export PROJECT="k8s-jenkins-gci-scalability"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override GCE defaults.
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-2"
                export NODE_DISK_SIZE="50GB"
                export NUM_NODES="100"
                export ALLOWED_NOTREADY_NODES="1"
                export REGISTER_MASTER="true"
                # Reduce logs verbosity
                export TEST_CLUSTER_LOG_LEVEL="--v=2"
                # Increase resync period to simulate production
                export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
                # Increase delete collection parallelism
                export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-container-vm':  # kubernetes-e2e-gce-container-vm
            cron-string: '{sq-cron-string}'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel on a new ContainerVM image.'
            timeout: 50  # See #21138
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jenkins-cvm"
                export KUBE_GCE_NODE_IMAGE="container-v1-3-v20160604"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-master-on-cvm':  # kubernetes-e2e-gce-master-on-cvm
            cron-string: 'H * * * *' # run once an hour
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel with the master on a ContainerVM image.'
            test-owner: 'robertbailey & zml'
            timeout: 50  # See #21138
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jenkins-master-cvm"
                export KUBE_MASTER_OS_DISTRIBUTION="debian"
                export KUBE_GCE_MASTER_IMAGE="container-v1-3-v20160604"
                export KUBE_GCE_NODE_IMAGE="container-v1-3-v20160604"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-etcd3':  # kubernetes-e2e-gce-etcd3
            cron-string: '{sq-cron-string}'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel with etcd3 underneath.'
            test-owner: 'wojtek-t'
            emails: 'wojtekt@google.com'
            timeout: 50  # See #21138
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] \
                                         --kube-api-content-type=application/vnd.kubernetes.protobuf"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-e2e-etcd3"
                # Use etcd3 as storage backend.
                export STORAGE_BACKEND="etcd3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
                # Use new image for etcd.
                export TEST_ETCD_VERSION="3.0.4-migration.2"
        - 'gce-proto':  # kubernetes-e2e-gce-proto
            cron-string: '{sq-cron-string}'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel with protobuf communication.'
            timeout: 50  # See #21138
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] \
                                         --kube-api-content-type=application/vnd.kubernetes.protobuf"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-e2e-protobuf"
                # Store protobufs in database.
                export TEST_CLUSTER_STORAGE_CONTENT_TYPE="--storage-media-type=application/vnd.kubernetes.protobuf"
                # Use protobufs to communicate with apiserver.
                export TEST_CLUSTER_API_CONTENT_TYPE="--kube-api-content-type=application/vnd.kubernetes.protobuf"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-examples':  # kubernetes-e2e-gce-examples
            description: 'Run E2E examples test on GCE.'
            timeout: 90
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Example\]"
                export PROJECT="k8s-jkns-e2e-examples"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-gci-examples':  # kubernetes-e2e-gce-gci-examples
            description: 'Run E2E examples test on GCE.'
            timeout: 90
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Example\]"
                export PROJECT="k8s-jkns-e2e-gci-examples"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-multizone':  # kubernetes-e2e-gce-multizone
            description: 'Run all non-flaky, non-slow, non-disruptive, non-feature tests on GCE, in parallel, and in a multi-zone cluster.'
            timeout: 150
            emails: 'quinton@google.com, justin@fathomdb.com'
            test-owner: 'quinton'
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-ubelite"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export MULTIZONE="true"
                export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the nodes reside.  Master is in the first one.
                export KUBE_GCE_ZONE="us-central1-a" # Where the master resides - hangover due to legacy scripts.
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-federation':  # kubernetes-e2e-gce-federation
            # This test depends on the artifacts generated by the trigger-job. Be careful while changing this test.
            trigger-job: 'kubernetes-federation-build'
            description: 'Run all federation e2e tests.'
            timeout: 300
            emails: 'quinton@google.com, colin.hom@coreos.com, madhusudancs@google.com'
            test-owner: 'quinton'
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-federation"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Federation\]"
                export GINKGO_PARALLEL="n" # We don't have namespaces yet in federation apiserver, so we need to serialize
                export FEDERATION="true"
                export DNS_ZONE_NAME="k8s-federation.com."
                export FEDERATIONS_DOMAIN_MAP="federation=k8s-federation.com"
                export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the clusters will be created. Federation components are now deployed to the last one.
                export FEDERATION_PUSH_REPO_BASE="gcr.io/k8s-jkns-e2e-gce-federation"
                export KUBE_GCE_ZONE="us-central1-f" #TODO(colhom): This should be generalized out to plural case
                export KUBE_GCS_RELEASE_BUCKET=kubernetes-federation-release
                export KUBE_GCS_DEV_RELEASE_BUCKET=kubernetes-federation-release
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-gci-federation':  # kubernetes-e2e-gce-gci-federation
            # This test depends on the artifacts generated by the trigger-job. Be careful while changing this test.
            trigger-job: 'kubernetes-federation-build'
            description: 'Run all federation e2e tests.'
            timeout: 300
            emails: 'quinton@google.com, colin.hom@coreos.com, madhusudancs@google.com'
            test-owner: 'quinton'
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-gci-federatio" # GCE project IDs are restricted to 30 characters, so this name is intentionally truncated.
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Federation\]"
                export GINKGO_PARALLEL="n" # We don't have namespaces yet in federation apiserver, so we need to serialize
                export FEDERATION="true"
                export DNS_ZONE_NAME="k8s-federation-gci.com."
                export FEDERATIONS_DOMAIN_MAP="federation=k8s-federation-gci.com"
                export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the clusters will be created. Federation components are now deployed to the last one.
                export FEDERATION_PUSH_REPO_BASE="gcr.io/k8s-jkns-e2e-gce-federation"
                export KUBE_GCE_ZONE="us-central1-f" #TODO(colhom): This should be generalized out to plural case
                export KUBE_GCS_RELEASE_BUCKET=kubernetes-federation-release
                export KUBE_GCS_DEV_RELEASE_BUCKET=kubernetes-federation-release
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-kubenet':  # kubernetes-e2e-gce-kubenet
            description: 'Run all non-flaky, non-slow, non-disruptive, non-feature tests on GCE using kubenet as network provider'
            timeout: 120
            emails: 'mixia@google.com'
            test-owner: 'mixia'
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-kubenet"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export NETWORK_PROVIDER="kubenet"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
    jobs:
        - 'kubernetes-e2e-{suffix}'

- project:
    name: kubernetes-e2e-gce-1-2
    trigger-job: 'kubernetes-build-1.2'
    test-owner: 'Build Cop'
    suffix:
        - 'gce-release-1.2':  # kubernetes-e2e-gce-release-1.2
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel on the release-1.2 branch.'
            timeout: 50  # See #21138
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-e2e-gce-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-reboot-release-1.2':  # kubernetes-e2e-gce-reboot-release-1.2
            description: 'Run [Feature:Reboot] tests on GCE on the release-1.2 branch.'
            timeout: 180
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
                export PROJECT="k8s-jkns-e2e-gce-reboot-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-slow-release-1.2':  # kubernetes-e2e-gce-slow-release-1.2
            description: 'Runs slow tests on GCE, sequentially on the release-1.2 branch.'
            timeout: 150  #  See #24072
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-e2e-gce-slow-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-serial-release-1.2':  # kubernetes-e2e-gce-serial-release-1.2
            description: 'Run [Serial], [Disruptive], tests on GCE on the release-1.2 branch.'
            timeout: 300
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="k8s-jkns-e2e-gce-serial-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
    jobs:
        - 'kubernetes-e2e-{suffix}'

- project:
    name: kubernetes-e2e-gce-1-3
    trigger-job: 'kubernetes-build-1.3'
    test-owner: 'Release 1.3 owner'
    suffix:
        - 'gce-release-1.3':  # kubernetes-e2e-gce-release-1.3
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel on the release-1.3 branch.'
            timeout: 50  # See #21138
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gce-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-reboot-release-1.3':  # kubernetes-e2e-gce-reboot-release-1.3
            description: 'Run [Feature:Reboot] tests on GCE on the release-1.3 branch.'
            timeout: 180
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
                export PROJECT="k8s-jkns-gce-reboot-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-slow-release-1.3':  # kubernetes-e2e-gce-slow-release-1.3
            description: 'Runs slow tests on GCE, sequentially on the release-1.3 branch.'
            timeout: 150  #  See #24072
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gce-slow-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-serial-release-1.3':  # kubernetes-e2e-gce-serial-release-1.3
            description: 'Run [Serial], [Disruptive], tests on GCE on the release-1.3 branch.'
            timeout: 300
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="k8s-jkns-gce-serial-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-ingress-release-1.2':  # kubernetes-e2e-gce-ingress-release-1.2
            description: 'Run [Feature:Ingress] tests on GCE on the release-1.2 branch.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="kubernetes-ingress-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-ingress-release-1.3':  # kubernetes-e2e-gce-ingress-release-1.3
            description: 'Run [Feature:Ingress] tests on GCE on the release-1.3 branch.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="kubernetes-ingress-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
    jobs:
        - 'kubernetes-e2e-{suffix}'

- project:
    name: kubernetes-e2e-gci-gce-1-3
    trigger-job: 'kubernetes-build-1.3'
    test-owner: 'Release 1.3 owner'
    suffix:
        - 'gce-release-1.3':  # kubernetes-e2e-gce-gci-release-1.3
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel on the release-1.3 branch.'
            timeout: 50  # See #21138
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gci-gce-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
        - 'gce-reboot-release-1.3':  # kubernetes-e2e-gci-gce-reboot-release-1.3
            description: 'Run [Feature:Reboot] tests on GCE on the release-1.3 branch.'
            timeout: 180
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
                export PROJECT="k8s-jkns-gci-gce-reboot-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
        - 'gce-slow-release-1.3':  # kubernetes-e2e-gci-gce-slow-release-1.3
            description: 'Runs slow tests on GCE, sequentially on the release-1.3 branch.'
            timeout: 150  #  See #24072
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gci-gce-slow-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
        - 'gce-serial-release-1.3':  # kubernetes-e2e-gci-gce-serial-release-1.3
            description: 'Run [Serial], [Disruptive], tests on GCE on the release-1.3 branch.'
            timeout: 300
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="k8s-jkns-gci-gce-serial-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
        - 'gce-ingress-release-1.2':  # kubernetes-e2e-gci-gce-ingress-release-1.2
            description: 'Run [Feature:Ingress] tests on GCE on the release-1.2 branch.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="kubernetes-gci-ingress-1-2"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
        - 'gce-ingress-release-1.3':  # kubernetes-e2e-gci-gce-ingress-release-1.3
            description: 'Run [Feature:Ingress] tests on GCE on the release-1.3 branch.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="kubernetes-gci-ingress-1-3"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
    jobs:
        - 'kubernetes-e2e-gci-{suffix}'

- project:
    name: kubernetes-e2e-gce-1-4
    trigger-job: 'kubernetes-build-1.4'
    test-owner: 'pwittrock'
    suffix:
        - 'gce-release-1.4':  # kubernetes-e2e-gce-release-1.4
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel on the release-1.4 branch.'
            timeout: 50  # See kubernetes/kubernetes#21138
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gce-1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-reboot-release-1.4':  # kubernetes-e2e-gce-reboot-release-1.4
            description: 'Run [Feature:Reboot] tests on GCE on the release-1.4 branch.'
            timeout: 180
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
                export PROJECT="k8s-jkns-gce-reboot-1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-slow-release-1.4':  # kubernetes-e2e-gce-slow-release-1.4
            description: 'Runs slow tests on GCE, sequentially on the release-1.4 branch.'
            timeout: 150  #  See kubernetes/kubernetes#24072
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jkns-gce-slow-1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-serial-release-1.4':  # kubernetes-e2e-gce-serial-release-1.4
            description: 'Run [Serial], [Disruptive], tests on GCE on the release-1.4 branch.'
            timeout: 300
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="k8s-jkns-gce-serial-1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-ingress-release-1.4':  # kubernetes-e2e-gce-ingress-release-1.4
            description: 'Run [Feature:Ingress] tests on GCE on the release-1.4 branch.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="k8s-jkns-gce-ingress1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-gci-release-1.4':  # kubernetes-e2e-gce-gci-release-1.4
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE with GCI images in parallel on the release-1.4 branch.'
            timeout: 50
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="e2e-gce-gci-ci-1-4"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-gci-slow-release-1.4':  # kubernetes-e2e-gce-gci-slow-release-1.4
            description: 'Runs slow tests on GCE with GCI images, sequentially on the release-1.4 branch.'
            timeout: 150
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                         --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="e2e-gce-gci-ci-slow-1-4"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-gci-serial-release-1.4':  # kubernetes-e2e-gce-gci-serial-release-1.4
            description: 'Run [Serial], [Disruptive], tests on GCE, with GCI images, on the release-1.4 branch.'
            timeout: 300
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                         --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
                export PROJECT="e2e-gce-gci-ci-serial-1-4"
                export KUBE_OS_DISTRIBUTION="gci"
        - 'gce-alpha-features-release-1.4':
            description: 'Run alpha feature tests on GCE on the release-1.4 branch.'
            timeout: 180
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-alpha1-4"
                export KUBE_FEATURE_GATES="AllAlpha=true"
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:(ExternalTrafficLocalOnly|PetSet)\]|ScheduledJob"
                export PROJECT="k8s-jkns-e2e-gce-alpha1-4"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-scalability-release-1.4':  # kubernetes-e2e-gce-scalability-release-1.4
            description: 'Run scalability E2E tests on GCE from the release-1.4 branch.'
            timeout: 120
            cron-string: '@daily'
            job-env: |
                export JENKINS_PUBLISHED_VERSION="ci/latest-1.4"
                export E2E_NAME="e2e-scalability-1-4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                         --gather-resource-usage=true \
                                         --gather-metrics-at-teardown=true \
                                         --gather-logs-sizes=true \
                                         --output-print-type=json"
                # Use the 1.1 project for now, since it has quota.
                # TODO: create a project k8s-e2e-gce-scalability-release and move this test there
                export PROJECT="k8s-e2e-gce-scalability-1-1"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override GCE defaults.
                export KUBE_GCE_ZONE="us-east1-b"
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-1"
                export NODE_DISK_SIZE="50GB"
                export NUM_NODES="100"
                export REGISTER_MASTER="true"
                # Reduce logs verbosity
                export TEST_CLUSTER_LOG_LEVEL="--v=2"
                # TODO: Remove when we figure out the reason for occasional failures #19048
                export KUBELET_TEST_LOG_LEVEL="--v=4"
                # Increase resync period to simulate production
                export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
                # Increase delete collection parallelism
                export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-federation-1.4':  # kubernetes-e2e-gce-federation-1.4
            # This test depends on the artifacts generated by the trigger-job. Be careful while changing this test.
            trigger-job: 'kubernetes-federation-build-1.4'
            description: 'Run all federation e2e tests.'
            timeout: 300
            emails: 'quinton@google.com, colin.hom@coreos.com, madhusudancs@google.com'
            test-owner: 'madhusudancs'
            job-env: |
                export PROJECT="k8s-jkns-e2e-gce-f8n-1-4"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Federation\]"
                export GINKGO_PARALLEL="n" # We don't have namespaces yet in federation apiserver, so we need to serialize
                export FEDERATION="true"
                export DNS_ZONE_NAME="k8s-federation-1-4.com."
                export FEDERATIONS_DOMAIN_MAP="federation=k8s-federation-1-4.com."
                export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the clusters will be created. Federation components are now deployed to the last one.
                export FEDERATION_PUSH_REPO_BASE="gcr.io/k8s-jkns-e2e-gce-federation"
                export KUBE_GCE_ZONE="us-central1-f" #TODO(colhom): This should be generalized out to plural case
                export KUBE_GCS_RELEASE_BUCKET=kubernetes-federation-release-1-4
                export KUBE_GCS_DEV_RELEASE_BUCKET=kubernetes-federation-release-1-4
    jobs:
        - 'kubernetes-e2e-{suffix}'

- project:
    name: kubernetes-e2e-gce-features
    trigger-job: 'kubernetes-build'
    suffix:
        - 'gce-ingress':  # kubernetes-e2e-gce-ingress
            description: 'Run [Feature:Ingress] tests on GCE.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
                export PROJECT="kubernetes-ingress"
                # TODO: Enable this when we've split 1.2 tests into another project.
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-flannel':  # kubernetes-e2e-gce-flannel
            description: 'Run E2E tests on GCE using Flannel and the latest successful build. This suite is quarantined in a dedicated project because Flannel integration is experimental.'
            disable_job: true  # Issue #24520
            # We don't really care to enforce a timeout for flannel tests. Any performance issues will show up in the other GCE builders.
            # This suite is to continuously check that flannel + Kubernetes works.
            timeout: 120
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                # XXX Not a unique project
                export E2E_NAME="e2e-flannel"
                export PROJECT="kubernetes-flannel"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override GCE defaults.
                export NETWORK_PROVIDER="flannel"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-es-logging':  # kubernetes-e2e-gce-es-logging
            description: 'Run [Feature:Elasticsearch] tests on GCE using the latest successful build.'
            timeout: 90
            emails: 'mixia@google.com'
            test-owner: 'mixia'
            job-env: |
                export PROJECT="kubernetes-es-logging"
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Elasticsearch\]"
                export KUBE_LOGGING_DESTINATION="elasticsearch"
                export KUBE_NODE_OS_DISTRIBUTION="debian"
        - 'gce-petset':  # kubernetes-e2e-gce-petset
            description: 'Run [Feature:PetSet] tests on GCE.'
            timeout: 90
            emails: 'beeps@google.com'
            test-owner: 'beeps'
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:PetSet\]"
                export PROJECT="kubernetes-petset"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"  # TODO: Enable once we've fixed #23032
                export KUBE_NODE_OS_DISTRIBUTION="debian"
    jobs:
        - 'kubernetes-e2e-{suffix}'

- project:
    name: kubernetes-e2e-gce-enormous-cluster
    test-owner: 'gmarek'
    emails: 'gmarek@google.com'
    # TODO: Currently run it only manually. Fix it once we have all permissions.
    cron-string: ''
    trigger-job: ''
    description: 'Starts and deletes empty 2000 node cluster and runs scalability tests on it. Does allow few Nodes to fail during startup.'
    timeout: 1440
    branch: 'master'
    suffix: 'gce-enormous-cluster'  # kubernetes-e2e-gce-enormous-cluster
    job-env: |
        # XXX Not a unique project
        export E2E_NAME="e2e-enormous-cluster"
        export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                 --kube-api-content-type=application/vnd.kubernetes.protobuf \
                                 --allowed-not-ready-nodes=20"
        export PROJECT="kubernetes-scale"
        export FAIL_ON_GCP_RESOURCE_LEAK="false"
        # Override GCE defaults.
        # Temporarily switch of Heapster, as this will not schedule anywhere.
        # TODO: Think of a solution to enable it.
        export KUBE_ENABLE_CLUSTER_MONITORING="none"
        export CLUSTER_IP_RANGE="10.224.0.0/13"
        # TODO: Move to us-central1-c once we have permission for it.
        export KUBE_GCE_ZONE="us-east1-a"
        export MASTER_SIZE="n1-standard-32"
        export NODE_SIZE="n1-standard-1"
        export NODE_DISK_SIZE="50GB"
        export NUM_NODES="2000"
        export ALLOWED_NOTREADY_NODES="20"
        # Reduce logs verbosity
        export TEST_CLUSTER_LOG_LEVEL="--v=1"
        # Switch off image puller to workaround #32191.
        export PREPULL_E2E_IMAGES="false"
        export MAX_INSTANCES_PER_MIG="1000"
        # TODO: re-enable service creation after we debug problems with this suite
        # export CREATE_SERVICES="true"
        # Increase resync period to simulate production
        export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
        # Increase delete collection parallelism
        export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
        # Increase limit for inflight requests in apiserver.
        # TODO: Uncomment after validating 1.4 release.
        # export TEST_CLUSTER_MAX_REQUESTS_INFLIGHT="--max-requests-inflight=800"
        # Increase qps limits in scheduler and controller manager.
        # TODO: Uncomment after validating 1.4 release.
        # export CONTROLLER_MANAGER_TEST_ARGS="--kube-api-qps=100 --kube-api-burst=100"
        # TODO: Uncomment after validating 1.4 release.
        # export SCHEDULER_TEST_ARGS="--kube-api-qps=100 --kube-api-burst=100"
        # Increase throughput in Load test.
        # TODO: Uncomment after validating 1.4 release.
        # export LOAD_TEST_THROUGHPUT=50
        export KUBE_NODE_OS_DISTRIBUTION="debian"
    jobs:
        - 'kubernetes-e2e-{suffix}'
